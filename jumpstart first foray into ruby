# Goal:
# Collect info about the user and utilize it in conversation.

# An introduction:
puts "Hello. \nMy name is Computer. "
puts "That's right. Just sound it out slowwwly." 

#Included some pauses throughout for ease of reading the output.
gets.chomp

puts "'Kum - pew - tur'. "
gets.chomp

puts "Mmn."
gets.chomp

puts "Yes." 
gets.chomp

puts "Magnifico!"

#Here, we ask for the user's name.
puts "...Nice accent! Now, what is your name? "
name = gets.chomp

#If the response is a blank, we politely ask again.
if name.to_s.empty?
	puts "What was that? Sorry. Speak up would you?"
	puts "I'm a little hard of hearing."
	name = gets.chomp
end

#Repeat!
if name.to_s.empty?
	puts "Oh, humor me."
 name = gets.chomp
end

#This loop prevents the user from continuing onward until they 
#provide a response that is not a blank line.
until !name.to_s.empty?
 puts "Eh?"
 name = gets.chomp
end

#After the user inputs a response that is not a blank line,
#the conversation continues.
puts "It's so wonderful to meet you, #{name.capitalize}! "
puts "I've been waiting ALL DAY for someone to come say hello!"
gets.chomp
puts "(That's a lovely shirt you're wearing by the way.)"
puts "Anyway! Enough about me! Let's talk about you!"
gets.chomp
puts "I -really- like music. \nI LOVE They Might be Giants."

#Gathering information. Have they heard of this band?
puts "Have you heard of them?"
answer = gets.strip

#The 'eh?' loop is repeated to discourage blank line responses.
until !answer.to_s.empty?
	puts "Eh?"
	answer = gets.strip
end

#These lines allow for yes-type answers to count as a yes,
#and then receive an appropriate response.
case answer.downcase
when "yes", "yes.", "yeah", "yeah.", "sure", "sure.", "ya", "yep", "you bet"
  puts "Oh, I'm so glad. Aren't they great?"
  
#If we don't receive one of the defined yes-type answers,
#ruby offers a weblink to one of their music videos.
#I want to figure out how to make this a hyperlink.
else
  puts "That's too bad! You're really missing out!\n\n"
  puts "Here is a sample of their stuff in case you want to "
  puts "listen later!"
  puts "https://www.youtube.com/watch?v=jAMRTGv82Zo"
end

#Asking for more info.
gets.chomp
puts "Who is YOUR favorite musician?" 
    musician = gets.chomp

#Looping until user gives more than a blank line.
until !musician.to_s.empty?
	puts "Eh?"
	musician = gets.strip
end

#Repeat input with comment.
#I'd like to properly capitalize the output later. 
#I think this will take turning the input into an array and
#toying with individual words.

puts "Ah. I also enjoy #{musician}." 

#Asking for more info.
puts "Is there a band you -dislike-?"
dislike = gets.chomp

#Looping until user gives more than a blank line.
until !dislike.to_s.empty?
	puts "Eh?"
	dislike = gets.strip
end

#Varied responses for varied input. Still toying with case
#and parsing.
case dislike
when "no", "no.", "nope", "nope."
	puts "Wow! You must really like music!"
when "yes", "yes."
	puts "Who?"
	dislike = gets.chomp
		until !dislike.to_s.empty?
			puts "Eh?"
			dislike = gets.strip
		end
	puts "Yes! #{dislike.capitalize}! They're terrible!"
	puts "You have excellent taste in music, #{name.capitalize}."
else
	puts "Yes! #{dislike.capitalize}! They're terrible!"
	puts "You have excellent taste in music, #{name.capitalize}."
end
gets.chomp

puts "Anyway, I have to go now!\nCome back and chat again later!"
gets.chomp
